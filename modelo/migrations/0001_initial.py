# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-05-10 17:10
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Atendimento',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('tipo_entrega', models.CharField(max_length=45)),
                ('data', models.DateField(verbose_name='Data do Atendimento')),
                ('hora', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'atendimento',
            },
        ),
        migrations.CreateModel(
            name='Carrinho',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FK_carrinho_atendimento', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='modelo.Atendimento')),
            ],
            options={
                'db_table': 'carrinho',
            },
        ),
        migrations.CreateModel(
            name='Cartao',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('quant_pontos', models.IntegerField()),
            ],
            options={
                'db_table': 'cartao',
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('FK_cliente_cartao', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='modelo.Cartao')),
            ],
            options={
                'db_table': 'cliente',
            },
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('rua', models.CharField(max_length=100)),
                ('numero_casa', models.IntegerField()),
                ('complemento', models.CharField(blank=True, max_length=100, null=True)),
                ('bairro', models.CharField(max_length=100)),
                ('cep', models.IntegerField()),
                ('cidade', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'endereco',
            },
        ),
        migrations.CreateModel(
            name='Estoque',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100)),
                ('marca', models.CharField(max_length=100)),
                ('preco', models.TextField()),
                ('quant_produtos', models.CharField(max_length=45)),
                ('minimo', models.IntegerField()),
                ('pontos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'estoque',
            },
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('salario', models.FloatField()),
                ('periodo_trabalho', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'funcionario',
            },
        ),
        migrations.CreateModel(
            name='Situacao',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'situacao',
            },
        ),
        migrations.CreateModel(
            name='Telefone',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('ddd1', models.IntegerField()),
                ('numero1', models.CharField(max_length=15)),
                ('ddd2', models.IntegerField(blank=True, null=True)),
                ('numero2', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'telefone',
            },
        ),
        migrations.CreateModel(
            name='Tipofuncionario',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('desc_tipo', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'tipoFuncionario',
            },
        ),
        migrations.CreateModel(
            name='Trocapontos',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('pontos_gastos', models.IntegerField()),
                ('data', models.DateField(verbose_name='Data da troca')),
                ('hora', models.CharField(max_length=45)),
                ('FK_trocaPontos_cliente', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='modelo.Cliente')),
                ('FK_trocaPontos_estoque', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='modelo.Estoque')),
                ('FK_trocaPontos_funcionario', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='modelo.Funcionario')),
            ],
            options={
                'db_table': 'trocapontos',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=45)),
                ('sobrenome', models.CharField(max_length=45)),
                ('cpf', models.CharField(max_length=14)),
                ('login', models.CharField(max_length=45)),
                ('senha', models.CharField(max_length=45)),
                ('email', models.CharField(max_length=45)),
                ('FK_usuario_endereco', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='modelo.Endereco')),
                ('FK_usuario_telefone', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='modelo.Telefone')),
            ],
            options={
                'db_table': 'usuario',
            },
        ),
        migrations.AddField(
            model_name='funcionario',
            name='FK_funcionario_situacao',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='modelo.Situacao'),
        ),
        migrations.AddField(
            model_name='funcionario',
            name='FK_funcionario_tipo_funcionario',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='modelo.Tipofuncionario'),
        ),
        migrations.AddField(
            model_name='funcionario',
            name='FK_funcionario_usuario',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='modelo.Usuario'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='FK_cliente_usuario',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='modelo.Usuario'),
        ),
        migrations.AddField(
            model_name='carrinho',
            name='FK_carrinho_estoque',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='modelo.Estoque'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='FK_atendimento_cliente',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='modelo.Cliente'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='FK_atendimento_funcionario',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='modelo.Funcionario'),
        ),
    ]
